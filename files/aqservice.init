#!/bin/sh /etc/rc.common
# "new(er)" style init script
# Look at /lib/functions/service.sh on a running system for explanations of what other SERVICE_
# options you can use, and when you might want them.

START=80
USE_PROCD=1
APP=aqservice
PID_FILE=/var/run/$APP.pid
CONF_FILE=/var/etc/$APP.conf

handler() {
	local section="$1"
	local enable
	local password
	local port

	config_get_bool enabled "$section" "enabled" 0
	config_get password $section "psw"
	config_get port $section "port"
	config_get ifname $section ifname

	[ -n "$enabled" ] && echo -e "enabled = $enabled" >> $CONF_FILE
	[ -n "$password" ] && echo -e "password = $password" >> $CONF_FILE
	[ -n "$port" ] && echo -e "port = $port" >> $CONF_FILE
	[ -n "$ifname " ] && echo -e "ifname = $ifname" >> $CONF_FILE
}

init_config() {
	local ifname
	local addr

	echo -e "[general]" > $CONF_FILE

	config_load aqservice
	config_foreach handler general

	config_load network

	config_get addr lan ipaddr
	
	[ -n "$addr" ] && echo -e "addr = $addr" >> $CONF_FILE
}

start_service() {
	procd_open_instance
	init_config
	procd_set_param command /bin/$APP -s -c $CONF_FILE

	# respawn automatically if something died, be careful if you have an alternative process supervisor
	# if process dies sooner than respawn_threshold, it is considered crashed and after 5 retries the service is stopped
	procd_set_param respawn ${respawn_threshold:-3600} ${respawn_timeout:-5} ${respawn_retry:-5}

	procd_set_param limits core="unlimited"  # If you need to set ulimit for your process
	procd_set_param file /var/etc/$APP.conf # /etc/init.d/your_service reload will restart the daemon if these files have changed
	procd_set_param stdout 1 # forward stdout of the command to logd
	procd_set_param stderr 1 # same for stderr
	procd_set_param stdin 1 # stdin for system commands
	procd_close_instance
}

service_triggers()
{
	procd_add_reload_trigger "aqservice"
}


reload_service()
{
	stop
	start
}


